provider: aws

global:
  accountID: ""
  name: ""
  namePrefix: "capi-"
  namespace: whatever
  region: ""
  clusterVersion: v1.31.0
  labels: {}
  additionalTags: {}

cluster:
  create: false
  clusterNetwork:
    pods:
      cidrBlocks:
        - 192.168.0.0/16

awsClusterRoleIdentity:
  create: false
  allowedNamespaces: []
  roleARN: ""
  sessionName: ""
  durationSeconds: 900
  # awsClusterControllerIdentity:
  #   allowedNamespaces: []

awsControlPlane:
  create: false
  apiVersion: ""
  #For multi-tenancy support, a reference field (identityRef) is added to AWSCluster,
  #which informs the controller of which identity to be used when reconciling the cluster.
  #If the identity provided exists in a different AWS account, this is the mechanism which informs the controller to provision a cluster in a different account.
  # Identities should have adequate permissions for CAPA to reconcile clusters.
  # identityRef: ### https://cluster-api-aws.sigs.k8s.io/topics/multitenancy
  #   kind: AWSClusterRoleIdentity
  #   name: ""
  # network: {}
  network:
    vpc:
      id: ""
    subnets: []
  region: ""
  partition: "" #default aws
  sshKeyName: ""
  roleAdditionalPolicies: []
  logging: {}
  additionalTags: {}
  iamAuthenticatorConfig: {}
  # iamAuthenticatorConfig:
  #   mapRoles:
  #     - rolearn: "role_arn1"
  #       username: "sadmin"
  #       groups:
  #         - "admin-group"
  #     - rolearn: "role_arn2"
  #       username: "sso-admin"
  #       groups:
  #         - "sso-admin-group"
  endpointAccess: {}
  associateOIDCProvider: false
  addons: []

nodeGroup:
  create: false
  availabilityZones: []
  subnetIDs: []
  systemNodesReplicas: 1
  userNodesReplicas: 1
  roleAdditionalPolicies:
    - "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
    - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
    - "arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy"
  amiType: ""
  awsLaunchTemplate:
    imageLookupBaseOS: "amzn_2"
    imageLookupFormat: ""
    imageLookupOrg: ""
    instanceType: "m5.xlarge"
    rootVolume:
      size: 250
      type: "gp3"
    instanceMetadataOptions:
      httpTokens: "required"
      httpPutResponseHopLimit: 2
  amiData: ""
